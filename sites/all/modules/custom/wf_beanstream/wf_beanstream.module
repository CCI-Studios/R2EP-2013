<?php
/*
	TODO:
	- add fields to webform programatically
*/

function wf_beanstream_form_alter(&$form, &$form_state, $form_id) {
	if ($form_id == "webform_node_form") {
		$form['payment_options'] = array(
			'#type'			=> 'fieldset',
			'#title'		=> t('Payment Options'),
			'#summary'		=> 'adfsasd',
			'#collapsible'	=> true,
			'#collapsed'	=> true,
			'#group'		=> 'additional_settings',
		);

		$form['payment_options']['field_wfbs_use'] = $form['field_wfbs_use'];
		unset($form['field_wfbs_use']);
		$form['payment_options']['field_wfbs_sandbox'] = $form['field_wfbs_sandbox'];
		unset($form['field_wfbs_sandbox']);
		$form['payment_options']['field_wfbs_price'] = $form['field_wfbs_price'];
		unset($form['field_wfbs_price']);
		$form['payment_options']['field_wfbs_flexible'] = $form['field_wfbs_flexible'];
		unset($form['field_wfbs_flexible']);
		$form['payment_options']['field_wfbs_reocurring'] = $form['field_wfbs_reocurring'];
		unset($form['field_wfbs_reocurring']);
		$form['payment_options']['field_wfbs_sku'] = $form['field_wfbs_sku'];
		unset($form['field_wfbs_sku']);
		$form['payment_options']['field_wfbs_note'] = $form['field_wfbs_note'];
		unset($form['field_wfbs_note']);
		$form['payment_options']['field_wfbs_prefix'] = $form['field_wfbs_prefix'];
		unset($form['field_wfbs_prefix']);

		$form['#validate'][] = '_wf_beanstream_form_alter_validate';
	}

	if (substr($form_id, 0, 19) == 'webform_client_form') {
		$node = $form['#node'];

		// check if payment processing is enabled
		if ($node && $node->field_wfbs_use && $node->field_wfbs_use['und'][0]['value'] == '1') {
			global $user;
			$user_fields = user_load($user->uid);

			if ($user_fields->uid != 0) {
				$first_name = $user_fields->field_first_name['und'][0]['value'];
				$last_name = $user_fields->field_last_name['und'][0]['value'];
				$email = $user_fields->mail;
			} else {
				$first_name = '';
				$last_name = '';
				$email = '';
			}

			$form['wfbs_personal_info'] = array(
				'#type'		=> 'fieldset',
				'#title'	=> t('Personal Information'),
				'#attributes' => array(
					'class' => array('gridContainer')
				),
			);
			$form['wfbs_payment_details'] = array(
				'#type'		=> 'fieldset',
				'#title'	=> t('Payment Details'),
				'#attributes' => array(
					'class' => array('gridContainer')
				),
			);

			$form['wfbs_personal_info']['wfbs_first_name'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('First Name'),
				'#required'	=> true,
				'#default_value'	=> $first_name,
				'#prefix'	=> '<div class="col-1-2">',
				'#suffix'	=> '</div>',
			);
			$form['wfbs_personal_info']['wfbs_last_name'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('Last Name'),
				'#required'	=> true,
				'#default_value'	=> $last_name,
				'#prefix'	=> '<div class="col-1-2">',
				'#suffix'	=> '</div>',
			);
			$form['wfbs_personal_info']['wfbs_email'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('Email Address'),
				'#default_value'	=> $email,
				'#required' => true,
				'#prefix'	=> '<div class="col-1-2">',
				'#suffix'	=> '</div>',
			);
			$form['wfbs_personal_info']['wfbs_phone'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('Phone Number'),
				'#required'	=> true,
				'#prefix'	=> '<div class="col-1-2">',
				'#suffix'	=> '</div>',
			);

			$form['wfbs_personal_info']['wfbs_address1'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('Address 1'),
				'#required'	=> true,
				'#prefix'	=> '<div class="col-1-2">',
				'#suffix'	=> '</div>',
			);
			$form['wfbs_personal_info']['wfbs_address2'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('Address 2'),
				'#prefix'	=> '<div class="col-1-2">',
				'#suffix'	=> '</div>',
			);
			$form['wfbs_personal_info']['wfbs_city'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('City'),
				'#required'	=> true,
				'#prefix'	=> '<div class="col-1-2">',
				'#suffix'	=> '</div>',
			);

			$form['wfbs_personal_info']['wfbs_province'] = array(
				'#type'		=> 'select',
				'#title'	=> t('Province'),
				'#required'	=> true,
				'#prefix'	=> '<div class="col-1-2">',
				'#suffix'	=> '</div>',
				'#options'	=> array(
					"ON" => t('Ontario'), "AB" => t('Alberta'), "BC" => t('British Columbia'), "MB" => t('Manitoba'), "NB" => t('New Brunswick'), "NL" => t('Newfoundland and Labrador'), "NT" => t('Northwest Territories'), "NS" => t('Nova Scotia'), "NU" => t('Nunavut'), "PE" => t('Prince Edward Island'), "QC" => t('Quebec'), "SK" => t('Saskatchewan'), "YT" => t('Yukon'), "AL" => t('Alabama'), "AK" => t('Alaska'), "AS" => t('American Samoa'), "AZ" => t('Arizona'), "AR" => t('Arkansas'), "CA" => t('California'), "CO" => t('Colorado'), "CT" => t('Connecticut'), "DE" => t('Delaware'), "DC" => t('District of Columbia'), "FL" => t('Florida'), "GA" => t('Georgia'), "GU" => t('Guam'), "HI" => t('Hawaii'), "ID" => t('Idaho'), "IL" => t('Illinois'), "IN" => t('Indiana'), "IA" => t('Iowa'), "KS" => t('Kansas'), "KY" => t('Kentucky'), "LA" => t('Louisiana'), "ME" => t('Maine'), "MH" => t('Marshall Islands'), "MD" => t('Maryland'), "MA" => t('Massachusetts'), "MI" => t('Michigan'), "MN" => t('Minnesota'), "MS" => t('Mississippi'), "MO" => t('Missouri'), "MT" => t('Montana'), "NE" => t('Nebraska'), "NV" => t('Nevada'), "NH" => t('New Hampshire'), "NJ" => t('New Jersey'), "NM" => t('New Mexico'), "NY" => t('New York'), "NC" => t('North Carolina'), "ND" => t('North Dakota'), "MP" => t('Northern Marianas Islands'), "OH" => t('Ohio'), "OK" => t('Oklahoma'), "OR" => t('Oregon'), "PW" => t('Palau'), "PA" => t('Pennsylvania'), "PR" => t('Puerto Rico'), "RI" => t('Rhode Island'), "SC" => t('South Carolina'), "SD" => t('South Dakota'), "TN" => t('Tennessee'), "TX" => t('Texas'), "UT" => t('Utah'), "VT" => t('Vermont'), "VI" => t('Virgin Islands'), "VA" => t('Virginia'), "WA" => t('Washington'), "WV" => t('West Virginia'), "WI" => t('Wisconsin'), "WY" => t('Wyoming'),
				)
			);
			$form['wfbs_personal_info']['wfbs_postal'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('Postal Code'),
				'#required'	=> true,
				'#prefix'	=> '<div class="col-1-2">',
				'#suffix'	=> '</div>',
			);

			$form['wfbs_personal_info']['wfbs_country'] = array(
				'#type'		=> 'select',
				'#title'	=> t('Country'),
				'#required'	=> true,
				'#prefix'	=> '<div class="col-1-2">',
				'#suffix'	=> '</div>',
				'#options'	=> country_get_list(),
			);

			// dynamic price
			if ($node->field_wfbs_price && $node->field_wfbs_price['und'][0]['value']) {
				$form['wfbs_payment_details']['wfbs_price'] = array(
					'#type' => 'markup',
					'#markup' => '<p>'. t('Amount') .': $'. $node->field_wfbs_price['und'][0]['value'] .'</p>',
					'#prefix' => '<div class="col-2-2">',
					'#suffix' => '</div>',
				);
			}

			if ($node->field_wfbs_flexible && $node->field_wfbs_flexible['und'][0]['value']) {
				$form['wfbs_payment_details']['wfbs_set_price'] = array(
					'#type'		=> 'radios',
					'#title'	=> t('Select Amount'),
					'#options'	=> array('25'=>'$25', '35'=>'$35', '50'=>'$50', '100'=>'$100', 'other'=>'Other'),
					'#default_value'	=> 50,
					'#prefix'	=> '<div class="col-1-2">',
					'#suffix'	=> '</div>',
				);

				$form['wfbs_payment_details']['wfbs_price'] = array(
					'#type'		=> 'textfield',
					'#title'	=> t('Other Amount'),
					'#element_validate' => array('element_validate_number'),
					'#prefix'	=> '<div class="col-1-2">',
					'#suffix'	=> '</div>',
				);
			}

			// reoccuring
			//field_wfbs_reocurring
			if ($node->field_wfbs_reocurring && $node->field_wfbs_reocurring['und'][0]['value']) {
				$form['wfbs_payment_details']['wfbs_reoccuring'] = array(
					'#type'		=> 'radios',
					'#title'	=> t('Donation Type'),
					'#default_value' => 0,
					'#options'	=> array(
						'0' => 'One Time',
						'1' => 'Monthly',
					),
					'#prefix'	=> '<div class="col-1-3">',
					'#suffix'	=> '</div>',
				);
			}

			// card info
			$form['wfbs_payment_details']['wfbs_cardholder_name'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('Cardholder Name'),
				'#required'	=> true,
				'#default_value' => "$first_name $last_name",
				'#prefix'	=> '<div class="clear col-1-2">',
				'#suffix'	=> '</div><div class="col-1-2">&nbsp;</div>',
			);

			$form['wfbs_payment_details']['wfbs_card_number'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('Credit Card Number'),
				'#required'	=> true,
				'#prefix'	=> '<div class="col-1-2 clear">',
				'#suffix'	=> '</div>',
			);

			$form['wfbs_payment_details']['wfbs_card_type'] = array(
				'#type'		=> 'select',
				'#title'	=> t('Card Type'),
				'#options'	=> array(
					'mc'	=> t('Master Card'),
					'visa'	=> t('Visa'),
					'amex'	=> t('American Express'),
				),
				'#required'	=> true,
				'#prefix'	=> '<div class="col-1-2">',
				'#suffix'	=> '</div>',
			);

			$form['wfbs_payment_details']['wfbs_card_month'] = array(
				'#type'		=> 'select',
				'#title'	=> t('Month'),
				'#options'	=> array(),
				'#required'	=> true,
				'#prefix'	=> '<div class="col-1-6 clear">',
				'#suffix'	=> '</div>',
			);
			for ($i = 1; $i < 13; $i++) {
				$form['wfbs_payment_details']['wfbs_card_month']['#options'][sprintf('%02d', $i)] = $i;
			}

			$form['wfbs_payment_details']['wfbs_card_year'] = array(
				'#type'		=> 'select',
				'#title'	=> t('Year'),
				'#options'	=> array(),
				'#required'	=> true,
				'#prefix'	=> '<div class="col-1-6">',
				'#suffix'	=> '</div>',
			);
			for ($i = date('y'); $i < date('y') + 5; $i++) {
				$form['wfbs_payment_details']['wfbs_card_year']['#options'][$i] = $i;
			}

			$form['#validate'][] = '_wf_beanstream_payment_form_validate';
			$form['#submit'][] = '_wf_beanstream_payment_form_submit';
		}
	}
}

function _wf_beanstream_form_alter_validate(&$form, &$form_state) {
	$form['field_wfbs_use'] = $form['payment_options']['field_wfbs_use'];
	unset($form['payment_options']['field_wfbs_use']);
	$form['field_wfbs_sandbox'] = $form['payment_options']['field_wfbs_sandbox'];
	unset($form['payment_options']['field_wfbs_sandbox']);
	$form['field_wfbs_price'] = $form['payment_options']['field_wfbs_price'];
	unset($form['payment_options']['field_wfbs_price']);
	$form['field_wfbs_flexible'] = $form['payment_options']['field_wfbs_flexible'];
	unset($form['payment_options']['field_wfbs_flexible']);
	$form['field_wfbs_reocurring'] = $form['payment_options']['field_wfbs_reocurring'];
	unset($form['payment_options']['field_wfbs_reocurring']);
	$form['field_wfbs_sku'] = $form['payment_options']['field_wfbs_sku'];
	unset($form['payment_options']['field_wfbs_sku']);
	$form['field_wfbs_note'] = $form['payment_options']['field_wfbs_note'];
	unset($form['payment_options']['field_wfbs_note']);
	$form['field_wfbs_prefix'] = $form['payment_options']['field_wfbs_prefix'];
	unset($form['payment_options']['field_wfbs_prefix']);
}


function _wf_beanstream_payment_form_validate($form, &$form_state) {

	// bail early
	if (form_get_errors()) return;

	// check for valid node
	$node = $form['#node'];
	if (!$node) return;

	$cid = @$form_state['values']['submitted']['campaign_id'];
	$eid = @$form_state['values']['submitted']['event_id'];

	if (isset($cid) && $cid) {
		$parent = node_load($cid);
		$eid = $parent->field_event['und'][0]['target_id'];

		// get the campaing owner
		$uid = $parent->uid;
		$owner = user_load($uid);
		$campaigner = array(
			@$owner->field_first_name['und'][0]['value'],
			@$owner->field_last_name['und'][0]['value'],
			@$owner->mail,
		);
		$campaigner = implode(' ', array_filter($campaigner, 'strlen'));
	}

	if (isset($eid) && $eid) {
		$parent = node_load($eid);
		$city_name = @$parent->field_city_name['und'][0]['value'];
	}

	// if there are no other validation errors, do the transaction
	$sandbox = @$node->field_wfbs_sandbox['und'][0]['value'];
	$sku = isset($node->field_wfbs_sku['und'])? $node->field_wfbs_sku['und'][0]['value'] : '';
	$note = isset($node->field_wfbs_note['und'])? $node->field_wfbs_note['und'][0]['value'] : '';
	$prefix = isset($node->field_wfbs_prefix['und'])? $node->field_wfbs_prefix['und'][0]['value'] : '';

	if ($parent) {
		$sku .= '_'. strtolower($city_name);
	}

	if ($node->field_wfbs_flexible && $node->field_wfbs_flexible['und'][0]['value']) {
		if ($form_state['values']['wfbs_price']) {
			$price = $form_state['values']['wfbs_price'];
		} else if ($form_state['values']['wfbs_set_price']) {
			$price = $form_state['values']['wfbs_set_price'];
		} else {
			form_set_error('sdf', t('Please select an amount to donate'));
			return; // bail out
		}
	} else {
		$price = isset($node->field_wfbs_price['und'])? $node->field_wfbs_price['und'][0]['value'] : 0;
	}

	$firstname = $form_state['values']['wfbs_first_name'];
	$lastname = $form_state['values']['wfbs_last_name'];
	$email = $form_state['values']['wfbs_email'];
	$phone = $form_state['values']['wfbs_phone'];
	$reoccuring = $form_state['values']['wfbs_reoccuring'];
	$language = $form_state['values']['submitted']['preferred_language'];

	$cardholder_name = $form_state['values']['wfbs_cardholder_name'];
	$card_number = $form_state['values']['wfbs_card_number'];
	$card_type = $form_state['values']['wfbs_card_type'];
	$card_month = $form_state['values']['wfbs_card_month'];
	$card_year = $form_state['values']['wfbs_card_year'];

	$address1 = $form_state['values']['wfbs_address1'];
	$address2 = $form_state['values']['wfbs_address2'];
	$city = $form_state['values']['wfbs_city'];
	$province = strtoupper(substr($form_state['values']['wfbs_province'], 0, 2));
	$postal = strtoupper($form_state['values']['wfbs_postal']);
	$country = strtoupper(substr($form_state['values']['wfbs_country'], 0, 2));

	// try to include shared transaction
	mysql_connect('localhost', 'username', 'password');
	mysql_select_db('mainsite');

	@include '/home/www/mainsite/pages/whatyoucando/cccommon/transaction.php';
	if (!class_exists('Transaction')) {
		include 'transaction.php';
	}

	$trn = new Transaction(!$sandbox);
	$trn->setCardInfo($cardholder_name, $card_number, $card_month, $card_year);
	$trn->setContactInfo($cardholder_name, $email, $phone, $address1, $address2, $city,
		$province, $postal, $country);
	$trn->setPersonalInfo($firstname, $lastname);

	$trn->addItem($sku, 1, $price, $note);

	if ($reoccuring) {
		$trn->makeMonthly($sku, $price);
	}

	// TODO add monthly option
	$trn->attemptTransaction($prefix);

	if ($trn->succeeded) {
		module_invoke_all('wfbs_payment_success', $trn, $form, $form_state);
		$fromname = $firstname .' '. $lastname;
		$address = $address1 ."\n";
		$address .= $city .', '. $province ."\n";
		$address .= $postal ."\n";
		$address .= $country;
		$receiptID = $trn->output['trnOrderNumber'];

		if (!$reoccuring && $price >= 20) {
			$date = date('F j, Y');

			@include("/home/www/mainsite/pages/whatyoucando/cccommon/ereceipt.php");
			if (function_exists('new_receipt')) {
				$receipt = new_receipt($fromname, $address, $date, $note, $price,
					@$trn->output['ewbDonationId'], 'en', "/home/www/mainsite/pages/whatyoucando/cccommon/");
				$sqlresult = mysql_query("SELECT LAST_INSERT_ID()");
                list($receiptID) = mysql_fetch_array($sqlresult);
			} else {
				$receipt = false;
			}
		} else {
			$receipt = false;
		}

		if ($receipt) {
			$email_from = 'Engineers Without Borders <info@ewb.ca>';
			$email_subject = 'Thank you for your donation to Engineers Without Borders';
			$email_msg = "Dear $firstname,\n\nThank you for supporting Engineers Without Borders.  Attached to this email is a tax receipt for your recent donation of \$$price.  Your generous contribution is enabling us to positively impact the lives of thousands of people each year in rural communities throughout West and Southern Africa.\n\nWith your support EWB has pioneered sophisticated responses to complex development challenges and is impacting vulnerable communities where it is needed most.  EWB works across all sectors to address the challenges of extreme poverty, taking an analytical and innovative approach to effect lasting change in Canada and Africa.\n\nRecently, EWB volunteers working in Ghana's agriculture sector have ensured that farmers can use business planning and monitoring tools to generate sustainable crop production. As a result many farmers will now have enough ongoing income to send their children to school for the first time.  Our experience in Ghana is just one example of EWB's long-term impact on rural communities throughout Africa.\n\nWith a renewed vision, EWB aims to work in the coming year to further build the capability of rural Africans, development partners, government leaders, and Canadians as a whole to eliminate poverty.  We choose strong partners to improve the effectiveness of sustainable development at all levels, through both policy and field-based work.\n\nHowever with almost 10 years experience, EWB has realized that there are many miles left to go before extreme poverty will be eliminated in Africa.  Creating appropriate and lasting solutions to the complexities of poverty is not easy, and often takes time.  As a result, EWB depends on the continued support of donors like you to ensure our ongoing impact both overseas, and at home.\n\nOnce again on behalf of all of us at EWB we thank you for your support - you are directly helping us foster opportunities for rural Africans to create lasting change in their lives.\n\nWarm regards,\nGeorge Roter, Co-Founder and CEO\n\nPlease keep the following receipt number for your records: $receiptID\nYour electronic tax receipt is attached to this email.  Note that the free Adobe Reader (or similar software) is required to view the receipt; you can download a copy at http://www.adobe.com/reader";
		} else {
			$email_from = 'Engineers Without Borders <info@ewb.ca>';
			$email_subject = 'Thank you for your donation to Engineers Without Borders';
			$email_msg = "Dear $firstname,\n\nThank you for your recent donation of \$$price to Engineers Without Borders.  Your generous contribution is enabling us to positively impact the lives of thousands of people each year in rural communities throughout West and Southern Africa.\n\nWith your support EWB has pioneered sophisticated responses to complex development challenges and is impacting vulnerable communities where it is needed most.  EWB works across all sectors to address the challenges of extreme poverty, taking an analytical and innovative approach to effect lasting change in Canada and Africa.\n\nRecently, EWB volunteers working in Ghana's agriculture sector have ensured that farmers can use business planning and monitoring tools to generate sustainable crop production. As a result many farmers will now have enough ongoing income to send their children to school for the first time.  Our experience in Ghana is just one example of EWB's long-term impact on rural communities throughout Africa.\n\nWith a renewed vision, EWB aims to work in the coming year to further build the capability of rural Africans, development partners, government leaders, and Canadians as a whole to eliminate poverty.  We choose strong partners to improve the effectiveness of sustainable development at all levels, through both policy and field-based work.\n\nHowever with almost 10 years experience, EWB has realized that there are many miles left to go before extreme poverty will be eliminated in Africa.  Creating appropriate and lasting solutions to the complexities of poverty is not easy, and often takes time.  As a result, EWB depends on the continued support of donors like you to ensure our ongoing impact both overseas, and at home.\n\nOnce again on behalf of all of us at EWB we thank you for your support - you are directly helping us foster opportunities for rural Africans to create lasting change in their lives.\n\nWarm regards,\nGeorge Roter, Co-Founder and CEO\n\nPlease keep the following receipt number for your records: $receiptID";
		}

		include('Mail.php');
		include('Mail/mime.php');
		$mime = new Mail_mime();
		$mime->setFrom($email_from);
		$mime->setSubject($email_subject);
		$mime->setTxtBody($email_msg);

		if ($receipt) {
			$mime->addAttachment($receipt, 'application/pdf', 'receipt.pdf', false);
		}

		$body = $mime->get();
		$to = '"'. addslashes($fromname) .'" <'. addslashes($email) .'>';
		$hdrs = array('Return-Path' => 'donations@ewb.ca', 'To' => $to);
		$hdrs = $mime->headers($hdrs);
		$mail =& Mail::factory('smtp');
		$mail->send($to, $hdrs, $body);

		if ($reoccuring) {
            $subject = "Perspectives MONTHLY donation [" . $trn->output['trnOrderNumber'] . "]";
        } else {
            $subject = "Perspectives donation [" . $trn->output['trnOrderNumber'] . "]";
        }

		$tracking_email = "";
	    $tracking_email .= sprintf("%20s:  %s", 'Donation type', ($reoccuring == 1 ? 'Monthly' : 'One Time')) . "\n";
	    $tracking_email .= sprintf("%20s:  %s", 'Amount', $price) . "\n";
	    if ($campaigner) {
		    $tracking_email .= sprintf("%20s:  %s", 'Campaigner', $campaigner) ."\n";
		}

		$tracking_email .= sprintf("%20s:  %s", 'Campaign Year', date('Y')) . "\n";
	    $tracking_email .= sprintf("%20s:  %s", 'First Name', $firstname) . "\n";
	    $tracking_email .= sprintf("%20s:  %s", 'Last Name', $lastname) . "\n";
	    $tracking_email .= sprintf("%20s:  %s", 'Preferred Language', $language) . "\n";
	    $tracking_email .= sprintf("%20s:  %s", 'Email', $email) . "\n";
	    $tracking_email .= sprintf("%20s:  %s", 'Phone', $phone) . "\n";
	    $tracking_email .= sprintf("%20s:  %s", 'Address 1', $address1) . "\n";
	    $tracking_email .= sprintf("%20s:  %s", 'Address 2', $address2) . "\n";
	    $tracking_email .= sprintf("%20s:  %s", 'City', $city) . "\n";
	    $tracking_email .= sprintf("%20s:  %s", 'Province', strtoupper($province)) . "\n";
	    $tracking_email .= sprintf("%20s:  %s", 'Country', strtoupper($country)) . "\n";
	    $tracking_email .= sprintf("%20s:  %s", 'Postal', strtoupper($postal)) . "\n";


	    if ($parent) {
		    $tracking_email .= "\n\n". 'Run to End Poverty - '. $parent->title ."\n";
		}


		if ($receiptID) {
			$tracking_email .= sprintf("%20s:  %s", 'ereceipt', $receiptID) . "\n";
		}

	    $tracking_email .= "\n";
	    foreach ($trn->output as $key => $value) {
	        $tracking_email .= sprintf("%20s:  %s", $key, $value) . "\n";
	    }

	    mail("donations@ewb.ca, monitoring@ewb.ca", $subject, $tracking_email, "From: Donation System <itsupport@ewb.ca>");
	    //mail("jbennett@ccistudios.com", $subject, $tracking_email, "From: Donation System <itsupport@ewb.ca>");
	} else {
		form_set_error('', 'We weren\'t able to process your donation. The bank said: '. $trn->output['messageText']);
		module_invoke_all('wfbs_payment_failed', $trn, $form, $form_state);
	}

	mysql_close();
}

function _wf_beanstream_payment_form_submit($form, &$form_state) {


}

function wf_beanstream_wfbs_payment_success($trn, $form, $data) {
	global $user;
	$v = $data['values'];

	$transaction = new stdClass();
	$transaction->title = $trn->input['trnOrderNumber'];
	$transaction->type = 'transaction';
	node_object_prepare($transaction);

	$transaction->language = LANGUAGE_NONE;
	$transaction->uid = $user->uid;
	$transaction->status = 1;
	$transaction->promote = 0;
	$transaction->comment = 1;

	$transaction->field_first_name = array('und' => array(array('value' => $v['wfbs_first_name'])));
	$transaction->field_last_name = array('und' => array(array('value' => $v['wfbs_last_name'])));
	$transaction->field_contact_phone = array('und' => array(array('value' => $v['wfbs_phone'])));
	$transaction->field_contact_email = array('und' => array(array('value' => $v['wfbs_email'])));
	$transaction->field_contact_address1 = array('und' => array(array('value' => $v['wfbs_address1'])));
	$transaction->field_contact_address2 = array('und' => array(array('value' => $v['wfbs_address2'])));
	$transaction->field_contact_city = array('und' => array(array('value' => $v['wfbs_city'])));
	$transaction->field_contact_country = array('und' => array(array('value' => $v['wfbs_country'])));
	$transaction->field_contact_province = array('und' => array(array('value' => $v['wfbs_province'])));
	$transaction->field_postal = array('und' => array(array('value' => $v['wfbs_postal'])));
	$transaction->field_wfbs_price = array('und' => array(array('value' => $trn->totalAmount)));
	$transaction->field_wfbs_transaction = array('und' => array(array('value' => json_encode($trn->output))));

	$transaction = node_submit($transaction);
	node_save($transaction);
}

function wf_beanstream_wfbs_payment_failed($transaction, $form, $data) {

}