<?php
/*
	TODO:
	- add fields to webform programatically


*/

function wf_beanstream_form_alter(&$form, &$form_state, $form_id) {

	if ($form_id == "webform_node_form") {
		//dsm($form);

		$form['payment_options'] = array(
			'#type'			=> 'fieldset',
			'#title'		=> t('Payment Options'),
			'#summary'		=> 'adfsasd',
			'#collapsible'	=> true,
			'#collapsed'	=> true,
			'#group'		=> 'additional_settings',
		);

		$form['payment_options']['field_wfbs_use'] = $form['field_wfbs_use'];
		unset($form['field_wfbs_use']);
		$form['payment_options']['field_wfbs_api_key'] = $form['field_wfbs_api_key'];
		unset($form['field_wfbs_api_key']);
		$form['payment_options']['field_wfbs_price'] = $form['field_wfbs_price'];
		unset($form['field_wfbs_price']);
		$form['payment_options']['field_wfbs_flexible'] = $form['field_wfbs_flexible'];
		unset($form['field_wfbs_flexible']);
		$form['payment_options']['field_wfbs_reocurring'] = $form['field_wfbs_reocurring'];
		unset($form['field_wfbs_reocurring']);
		$form['payment_options']['field_wfbs_sku'] = $form['field_wfbs_sku'];
		unset($form['field_wfbs_sku']);
		$form['payment_options']['field_wfbs_note'] = $form['field_wfbs_note'];
		unset($form['field_wfbs_note']);
		$form['payment_options']['field_wfbs_prefix'] = $form['field_wfbs_prefix'];
		unset($form['field_wfbs_prefix']);

		$form['#validate'][] = '_wf_beanstream_form_alter_validate';
	}

	if (substr($form_id, 0, -3) == 'webform_client_form') {
		$node = $form['#node'];

		// check if payment processing is enabled
		if ($node && $node->field_wfbs_use && $node->field_wfbs_use['und'][0]['value'] == '1') {
			global $user;
			$user_fields = user_load($user->uid);

			if ($user_fields->uid != 0) {
				$first_name = $user_fields->field_first_name['und'][0]['value'];
				$last_name = $user_fields->field_last_name['und'][0]['value'];
				$email = $user_fields->mail;
			} else {
				$first_name = '';
				$last_name = '';
				$email = '';
			}

			$form['wfbs_personal_info'] = array(
				'#type'		=> 'fieldset',
				'#title'	=> t('Personal Information'),
			);
			$form['wfbs_payment_details'] = array(
				'#type'		=> 'fieldset',
				'#title'	=> t('Payment Details'),
			);

			$form['wfbs_personal_info']['wfbs_first_name'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('First Name'),
				'#required'	=> true,
				'#value'	=> $first_name,
			);
			$form['wfbs_personal_info']['wfbs_last_name'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('Last Name'),
				'#required'	=> true,
				'#value'	=> $last_name,
			);
			$form['wfbs_personal_info']['wfbs_email'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('Email Address'),
				'#value'	=> $email,
			);
			$form['wfbs_personal_info']['wfbs_phone'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('Phone Number'),
				'#required'	=> true,
			);

			$form['wfbs_personal_info']['wfbs_address1'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('Address'),
				'#required'	=> true,
			);
			$form['wfbs_personal_info']['wfbs_address2'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('Address'),
			);
			$form['wfbs_personal_info']['wfbs_city'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('City'),
				'#required'	=> true,
			);
			$form['wfbs_personal_info']['wfbs_province'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('Province'),
				'#required'	=> true,
			);
			$form['wfbs_personal_info']['wfbs_postal'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('Postal Code'),
				'#required'	=> true,
			);
			$form['wfbs_personal_info']['wfbs_country'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('Country'),
				'#required'	=> true,
			);

			$form['wfbs_payment_details']['wfbs_cardholder_name'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('Cardholder Name'),
				'#required'	=> true,
				'#value'	=> "$first_name $last_name",
			);

			$form['wfbs_payment_details']['wfbs_card_number'] = array(
				'#type'		=> 'textfield',
				'#title'	=> t('Credit Card Number'),
				'#required'	=> true,
			);

			$form['wfbs_payment_details']['wfbs_card_type'] = array(
				'#type'		=> 'select',
				'#title'	=> t('Card Type'),
				'#options'	=> array(
					'mc'	=> t('Master Card'),
					'visa'	=> t('Visa'),
					'amex'	=> t('American Express'),
				),
				'#required'	=> true,
			);

			$form['wfbs_payment_details']['wfbs_expiry'] = array(
				'#type'		=> 'fieldset',
				'#title'	=> t('Expiry Date'),
				'#required'	=> true,
			);

			$form['wfbs_payment_details']['wfbs_expiry']['wfbs_card_month'] = array(
				'#type'		=> 'select',
				'#title'	=> t('Month'),
				'#options'	=> array(),
				'#required'	=> true,
			);
			for ($i = 1; $i < 13; $i++) {
				$form['wfbs_payment_details']['wfbs_expiry']['wfbs_card_month']['#options'][sprintf('%02d', $i)] = $i;
			}

			$form['wfbs_payment_details']['wfbs_expiry']['wfbs_card_year'] = array(
				'#type'		=> 'select',
				'#title'	=> t('Year'),
				'#options'	=> array(),
				'#required'	=> true,
			);
			for ($i = date('y'); $i < date('y') + 5; $i++) {
				$form['wfbs_payment_details']['wfbs_expiry']['wfbs_card_year']['#options'][$i] = $i;
			}

			$form['#validate'][] = '_wf_beanstream_payment_form_validate';
			$form['#submit'][] = '_wf_beanstream_payment_form_submit';
		}
	}
}

function _wf_beanstream_form_alter_validate(&$form, &$form_state) {
	$form['field_wfbs_use'] = $form['payment_options']['field_wfbs_use'];
	unset($form['payment_options']['field_wfbs_use']);
	$form['field_wfbs_api_key'] = $form['payment_options']['field_wfbs_api_key'];
	unset($form['payment_options']['field_wfbs_api_key']);
	$form['field_wfbs_price'] = $form['payment_options']['field_wfbs_price'];
	unset($form['payment_options']['field_wfbs_price']);
	$form['field_wfbs_flexible'] = $form['payment_options']['field_wfbs_flexible'];
	unset($form['payment_options']['field_wfbs_flexible']);
	$form['field_wfbs_reocurring'] = $form['payment_options']['field_wfbs_reocurring'];
	unset($form['payment_options']['field_wfbs_reocurring']);
	$form['field_wfbs_sku'] = $form['payment_options']['field_wfbs_sku'];
	unset($form['payment_options']['field_wfbs_sku']);
	$form['field_wfbs_note'] = $form['payment_options']['field_wfbs_note'];
	unset($form['payment_options']['field_wfbs_note']);
	$form['field_wfbs_prefix'] = $form['payment_options']['field_wfbs_prefix'];
	unset($form['payment_options']['field_wfbs_prefix']);
}


function _wf_beanstream_payment_form_validate($form, &$form_state) {

	// bail early
	if (form_get_errors()) return;

	// if there are no other validation errors, do the transaction
	$key = $form['#node']->field_wfbs_api_key['und'][0]['value'];
	$price = $form['#node']->field_wfbs_price['und'][0]['value'];
	$sku = $form['#node']->field_wfbs_sku['und'][0]['value'];
	$note = $form['#node']->field_wfbs_note['und'][0]['value'];
	$prefix = $form['#node']->field_wfbs_prefix['und'][0]['value'];

	$firstname = $form_state['values']['wfbs_first_name'];
	$lastname = $form_state['values']['wfbs_last_name'];
	$email = $form_state['values']['wfbs_email'];
	$phone = $form_state['values']['wfbs_phone'];

	$cardholder_name = $form_state['values']['wfbs_cardholder_name'];
	$card_number = $form_state['values']['wfbs_card_number'];
	$card_type = $form_state['values']['wfbs_card_type'];
	$card_month = $form_state['values']['wfbs_card_month'];
	$card_year = $form_state['values']['wfbs_card_year'];

	$address1 = $form_state['values']['wfbs_address1'];
	$address2 = $form_state['values']['wfbs_address2'];
	$city = $form_state['values']['wfbs_city'];
	$province = $form_state['values']['wfbs_province'];
	$postal = $form_state['values']['wfbs_postal'];
	$country = $form_state['values']['wfbs_country'];


	$trn = new wf_beanstream_transaction($key); // TODO: Set key
	$trn->setCardInfo($cardholder_name, $card_number, $card_month, $card_year);
	$trn->setContactInfo($cardholder_name, $email, $phone, $address1, $address2, $city,
		$province, $postal, $country);
	$trn->setPersonalInfo($firstname, $lastname);

	$trn->addItem($sku, 1, $price, $note);

	// TODO add monthly option
	$trn->attemptTransaction($prefix);

	if ($trn->succeeded) {
		module_invoke_all('wfbs_payment_success', $trn, $form, $form_state);
	} else {
		form_set_error('', t('There was an error processing your Credit Card. Please try again.'));
		module_invoke_all('wfbs_payment_failed', $trn, $form, $form_state);
	}
}

function _wf_beanstream_payment_form_submit($form, &$form_state) {


}

function wf_beanstream_wfbs_payment_success($trn, $form, $data) {
	global $user;
	$v = $data['values'];

	$transaction = new stdClass();
	$transaction->title = $trn->input['trnOrderNumber'];
	$transaction->type = 'transaction';
	node_object_prepare($transaction);

	$transaction->language = LANGUAGE_NONE;
	$transaction->uid = $user->uid;
	$transaction->status = 1;
	$transaction->promote = 0;
	$transaction->comment = 1;

	$transaction->field_first_name = array('und' => array(array('value' => $v['wfbs_first_name'])));
	$transaction->field_last_name = array('und' => array(array('value' => $v['wfbs_last_name'])));
	$transaction->field_contact_phone = array('und' => array(array('value' => $v['wfbs_phone'])));
	$transaction->field_contact_email = array('und' => array(array('value' => $v['wfbs_email'])));
	$transaction->field_contact_address1 = array('und' => array(array('value' => $v['wfbs_address1'])));
	$transaction->field_contact_address2 = array('und' => array(array('value' => $v['wfbs_address2'])));
	$transaction->field_contact_city = array('und' => array(array('value' => $v['wfbs_city'])));
	$transaction->field_contact_country = array('und' => array(array('value' => $v['wfbs_country'])));
	$transaction->field_contact_province = array('und' => array(array('value' => $v['wfbs_province'])));
	$transaction->field_postal = array('und' => array(array('value' => $v['wfbs_postal'])));
	$transaction->field_wfbs_price = array('und' => array(array('value' => $trn->totalAmount)));
	$transaction->field_wfbs_transaction = array('und' => array(array('value' => json_encode($trn->output))));

	$transaction = node_submit($transaction);
	node_save($transaction);
}

function wf_beanstream_wfbs_payment_failed($transaction, $form, $data) {

}