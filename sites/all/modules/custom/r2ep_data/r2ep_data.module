<?php

function r2ep_data_menu() {
	$items = array();
	$items['event_export'] = array(
		'title' => 'CSV Data Export',
		'page callback' => '_r2ep_data_event',
		'access arguments' => array('edit any event content'),
	);
	$items['export/national'] = array(
		'title' => 'National CSV Data Export',
		'page callback' => '_r2ep_data_national',
		'access arguments' => array('edit any event content'),
	);
	$items['export/inactive'] = array(
		'title' => 'Inactive Users CSV Data Export',
		'page callback' => '_r2ep_data_inactive',
		'access arguments' => array('edit any event content'),
	);

	$items['admin/stats'] = array(
		'title' => 'National Numbers',
		'page callback' => '_r2ep_data_admin',
		'access arguments' => array('access content overview'),
	);

	return $items;
}

function _r2ep_data_admin() {
	return '<ul><li><a href="/export/national">National Stats</a></li><li><a href="/export/inactive">Inactive Users</a></li>';
}

function _r2ep_data_event($event_id) {
	if (!$event_id || !is_numeric($event_id)) {
		return;
	}

	$event = node_load($event_id);

	_r2ep_cvs_headers("{$event->title}.csv");

	$query = <<<QUERY
SELECT
fname.field_first_name_value,
lname.field_last_name_value,
cell.field_cell_number_value,
gender.field_gender_value,
u.mail,
shirt.data as "Shirt",
g.field_goal_value,
c.field_donation_count_value,
t.field_total_donations_value,
(
	SELECT group_concat(team.title) FROM node AS team

	left join field_data_field_event as te on te.entity_id = team.nid
	left join field_data_field_runners as rs on rs.entity_id = team.nid

	WHERE
	team.type = 'team' AND
	te.field_event_target_id = :eid and
	rs.field_runners_target_id = n.uid
) as "Teams"
FROM node as n

left join field_data_field_event as e on e.entity_id = n.nid
left join users as u on u.uid = n.uid
left join field_data_field_first_name as fname on fname.entity_id = u.uid
left join field_data_field_last_name as lname on lname.entity_id = u.uid
left join field_data_field_cell_number as cell on cell.entity_id = u.uid
left join field_data_field_gender as gender on gender.entity_id = u.uid
left join field_data_field_goal as g on g.entity_id = n.nid
left join field_data_field_donation_count as c on c.entity_id = n.nid
left join field_data_field_total_donations as t on t.entity_id = n.nid
left join webform_submissions as wf on wf.uid = n.uid
left join webform_submitted_data as shirt on shirt.sid = wf.sid

where
n.type = 'campaign' and
e.field_event_target_id = :eid and
(fname.bundle = 'user' or fname.bundle IS NULL) and
(lname.bundle = 'user' or lname.bundle IS NULL) and
(cell.bundle = 'user' or cell.bundle IS NULL) and
(gender.bundle = 'user' or gender.bundle IS NULL) and
(shirt.cid = 6 or shirt.cid IS NULL)

group by n.nid
QUERY;
	$results = db_query($query, array(':eid' => $event_id));

	echo "firstname, lastname, cell, email, goal, count, total, teams\r\n";
	foreach($results as $result) {
		$values = array(
			$result->field_first_name_value,
			$result->field_last_name_value,
			$result->field_cell_number_value,
			$result->field_gender_value,
			$result->mail,
			$result->Shirt,
			$result->field_goal_value,
			$result->field_donation_count_value,
			$result->field_total_donations_value,
			('"'. $result->Teams .'"'),
		);
		echo implode(', ', $values) ."\r\n";
	}

	drupal_exit();
}

function _r2ep_data_national() {
	_r2ep_cvs_headers("National.csv");

	$query = db_select('node', 'n')
		->condition('n.type', 'donation')
		->condition('n.status', 1)
		->condition('n.created', strtotime(date('Y-1-1')), '>=') // check for this year
		->condition('eid.field_event_target_id', null) // event directly matches
		->condition('cid.field_campaign_target_id', null); // event matches through campaign
	$query->addField('fname', 'field_first_name_value', 'fname');
	$query->addField('lname', 'field_last_name_value', 'lname');
	$query->addField('email', 'field_contact_email_email', 'email');
	$query->addField('phone', 'field_contact_phone_value', 'phone');
	$query->addField('address1', 'field_contact_address1_value', 'address1');
	$query->addField('address2', 'field_contact_address2_value', 'address2');
	$query->addField('city', 'field_contact_city_value', 'city');
	$query->addField('province', 'field_contact_province_value', 'province');
	$query->addField('postal', 'field_contact_postal_value', 'postal');
	$query->addField('country', 'field_contact_country_value', 'country');
	$query->addField('price', 'field_wfbs_price_value', 'amount');
	$query->addField('anonymous', 'field_anonymous_value', 'anonymous');

	$query->leftJoin('field_data_field_first_name', 'fname', 'fname.entity_id=n.nid');
	$query->leftJoin('field_data_field_last_name', 'lname', 'lname.entity_id=n.nid');
	$query->leftJoin('field_data_field_contact_email', 'email', 'email.entity_id=n.nid');
	$query->leftJoin('field_data_field_contact_phone', 'phone', 'phone.entity_id=n.nid');
	$query->leftJoin('field_data_field_contact_address1', 'address1', 'address1.entity_id=n.nid');
	$query->leftJoin('field_data_field_contact_address2', 'address2', 'address2.entity_id=n.nid');
	$query->leftJoin('field_data_field_contact_city', 'city', 'city.entity_id=n.nid');
	$query->leftJoin('field_data_field_contact_province', 'province', 'province.entity_id=n.nid');
	$query->leftJoin('field_data_field_contact_postal', 'postal', 'postal.entity_id=n.nid');
	$query->leftJoin('field_data_field_contact_country', 'country', 'country.entity_id=n.nid');
	$query->leftJoin('field_data_field_wfbs_price', 'price', 'price.entity_id=n.nid');
	$query->leftJoin('field_data_field_campaign', 'cid', 'cid.entity_id=n.nid');
	$query->leftJoin('field_data_field_event', 'eid', 'eid.entity_id=n.nid');
	$query->leftJoin('field_data_field_anonymous', 'anonymous', 'anonymous.entity_id=n.nid');

	$results = $query->execute();

	echo "first name, last name, email address, phone number, address1, address2, city, province, postal code, country, amount, campaign ID, event ID, anonymous\r\n";
	while($result = $results->fetchAssoc()) {
		echo implode(', ', $result) ."\r\n";
	}

	drupal_exit();
}

function _r2ep_data_inactive() {
	_r2ep_cvs_headers("Inactive.csv");

	$query = <<<QUERY
SELECT fname.field_first_name_value, lname.field_last_name_value, cell.field_cell_number_value, gender.field_gender_value, mail,
	max(a.field_active_campaign_value) AS active FROM users AS u
LEFT JOIN node AS c ON c.uid = u.uid
LEFT JOIN field_data_field_active_campaign AS a ON a.entity_id=c.nid

LEFT JOIN field_data_field_first_name AS fname ON fname.entity_id = u.uid
LEFT JOIN field_data_field_last_name AS lname ON lname.entity_id = u.uid
LEFT JOIN field_data_field_cell_number AS cell ON cell.entity_id = u.uid
LEFT JOIN field_data_field_gender AS gender ON gender.entity_id = u.uid

WHERE
 u.status = 1
 AND (fname.bundle = 'user' OR fname.bundle IS NULL)
 AND (lname.bundle = 'user' OR lname.bundle IS NULL)
 AND (cell.bundle = 'user' OR cell.bundle IS NULL)
 AND (gender.bundle = 'user' OR gender.bundle IS NULL)
 AND ( c.type IS NULL OR c.type = 'campaign' )

GROUP BY u.uid
HAVING active = 0 OR active IS NULL
QUERY;

	$results = db_query($query, array(':eid' => $event_id));
	echo "firstname, lastname, email, cell, gender\r\n";
	while($result = $results->fetchAssoc()) {
		array_pop($result); // pop active
		echo implode(', ', $result) ."\r\n";
	}
	echo "\n";

	drupal_exit();
}

function _r2ep_cvs_headers($filename) {
	header('Cache-Control: public');
	header('Content-Type: application/octet-stream');
	header('Cache-Control: no-store, no-cache, must-revalidate');
	header('Cache-Control: post-check=0, pre-check=0');
	header("Content-Disposition: attachment; filename=\"$filename\";");
	header('Content-Transfer-encoding: binary');
}

function r2ep_data_block_info() {
	$blocks = array();
	$blocks['r2ep_data_export'] = array(
		'info' => t('CSV Data Export')
	);

	return $blocks;
}

function r2ep_data_block_view($delta) {
	$block = array();

	switch($delta) {
		case 'r2ep_data_export':
			$node = menu_get_object();

			if ($node && $node->type == 'event') {
				$block['subject'] = '<none>';
				$block['content'] = "<a class=\"btn btn--block\" href=\"/event_export/{$node->nid}\">Download CSV</a>";
			}
			break;
	}

	return $block;
}