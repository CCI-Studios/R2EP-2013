<?php

define('R2EP_BLOCK_NATIONAL', 'r2ep_national_stats');
define('R2EP_BLOCK_EVENT', 'r2ep_event_stats');
define('R2EP_BLOCK_TEAM', 'r2ep_team_stats');
define('R2EP_BLOCK_RUNNER', 'r2ep_runner_stats');

function r2ep_stats_block_info() {
	$blocks = array();
	$blocks[R2EP_BLOCK_NATIONAL] = array(
		'info' => t('R2EP National Statistics'),
	);

	$blocks[R2EP_BLOCK_EVENT] = array(
		'info' => t('R2EP Event Statistics'),
	);

	$blocks[R2EP_BLOCK_TEAM] = array(
		'info' => t('R2EP Team Statistics'),
	);

	$block[R2EP_BLOCK_RUNNER] = array(
		'info' => t('R2EP Runner Statistics'),
	);

	return $blocks;
}

function r2ep_stats_block_view($delta = '') {
	// $path = drupal_get_path('module', 'r2ep_stats');
	// drupal_add_css($path .'/css/r2ep_stats.css');
	$block = array();

	switch ($delta) {
		case R2EP_BLOCK_NATIONAL:
			$block['subject'] = t('National Statistics');
			$block['content'] = _r2ep_stats_national_stats();
			break;
		case R2EP_BLOCK_EVENT:
			$block['subject'] = t('Event Statistics');
			$block['content'] = _r2ep_stats_event_stats();
			break;
		case R2EP_BLOCK_TEAM:
			$block['subject'] = t('Team Statistics');
			$block['content'] = _r2ep_stats_team_stats();
			break;
		case R2EP_BLOCK_RUNNER:
			$block['subject'] = t('Runner Statistics');
			$block['content'] = _r2ep_stats_runner_stats();
			break;
	}

	return $block;
}

function _r2ep_stats_national_stats() {
	$path = drupal_get_path('module', 'r2ep_stats');
	$block = array();

	$runners = _r2ep_stats_get_runners();
	$runner_count = count($runners);
	$runners_label = $runner_count == 1 ? 'runner' : 'runners';

	$money = _r2ep_stats_get_campaign_total($runners);

	$teams = db_query("SELECT COUNT(*) FROM {node} WHERE type = 'team' AND status = 1")->fetchField();
	$teams_label = $teams == 1 ? 'team' : 'teams';

	$block = _r2ep_stats_block(array(
		$runner_count .' '. t($runners_label),
		$money .' '. t('raised'),
		$teams .' '. t($teams_label)
	), array('runners', 'coin', 'teams'));

	return $block;
}

function _r2ep_stats_event_stats() {
	$block = _r2ep_stats_national_stats();
	return $block;
}

function _r2ep_stats_team_stats() {
	$path = drupal_get_path('module', 'r2ep_stats');
	$block = array();
	$node = menu_get_object();

	if (!$node || $node->type != 'team') {
		return '';
	}

	$runners = _r2ep_stats_get_runners('TEAM');
	$runners_count = count($runners);
	$runners_label = $runners_count == 1 ? 'runner' : 'runners';

	$money = _r2ep_stats_get_campaign_total($runners);

	$teams = db_query("SELECT COUNT(*) FROM {node} WHERE type = 'team' AND status = 1")->fetchField();
	$teams_label = $teams == 1 ? 'team' : 'teams';

	$block = _r2ep_stats_block(array(
		$runners_count .' '. t($runners_label),
		$money .' '. t('raised'),
		$teams .' '. t($teams_label)
	), array('runners', 'coin', 'teams'));

	return $block;
}

function _r2ep_stats_runner_stats() {
	$block = _r2ep_stats_national_stats();
	return $block;
}


function _r2ep_stats_get_runners($type = null) {
	$runners = array();

	switch($type) {
		case 'TEAM':
			$node = menu_get_object();
			if ($node && isset($node->field_runners['und'])) {
				foreach ($node->field_runners['und'] as $field) {
					$runners[] = $field['target_id'];
				}
			}
			break;
		case 'EVENT':

			break;
		default: // everything
			$runners = db_query("SELECT uid FROM {users} where status = 1")->fetchCol();
	}

	return $runners;
}

function _r2ep_stats_get_campaign_total($runners = null) {
	if (isset($runners) && count($runners) == 0) {
		return 0;
	}

	$total = db_select('node', 'n')
		->condition('n.type', 'campaign')
		->condition('n.status', 1);
	$total->join('field_data_field_goal', 'g', 'g.entity_id = n.nid');
	$total->addExpression('sum(g.field_goal_value)');

	if ($runners) {
		$total->condition('uid', $runners, 'IN');
	}

	$total = $total->execute()->fetchField();
	setlocale(LC_MONETARY, 'en_US');
	return money_format('%.0n', $total);
}

function _r2ep_stats_block($texts, $images) {
	$path = drupal_get_path('module', 'r2ep_stats');
	$block = array();

	if (count($texts) != count($images)) {
		return $block;
	}

	$block = array(
		'#theme' => 'item_list',
		'#items' => array(),
		'#attributes' => array(
			'class' => 'stats-list'
		),
	);

	for ($i = 0; $i < count($texts); $i++) {
		$text = $texts[$i];
		$image = $images[$i];

		$block['#items'][] = array(
			'data' => "<img src=\"/$path/images/$image.png\" />$text",
			'class' => array($image),
		);
	}

	return $block;
}