<?php
define('R2EP_BLOCK_USER_THERMOMETER', 'r2ep_block_user_thermometer');
define('R2EP_BLOCK_GROUP_THERMOMETER', 'r2ep_block_group_thermometer');
define('R2EP_STATS_BLOCK', 'r2ep_stats_block');

module_load_include('inc', 'r2ep_stats', 'r2ep_stats.queries');
module_load_include('inc', 'r2ep_stats', 'r2ep_stats.computed');

function r2ep_stats_block_info() {
	$blocks = array();
	$blocks[R2EP_BLOCK_USER_THERMOMETER] = array(
		'info' => t('R2EP User Thermometer'),
	);
	$blocks[R2EP_BLOCK_GROUP_THERMOMETER] = array(
		'info' => t('R2EP Group Thermometer'),
	);
	$blocks[R2EP_STATS_BLOCK] = array(
		'info' => t('R2EP Stats'),
	);

	return $blocks;
}

function r2ep_stats_block_view($delta = '') {
	// $path = drupal_get_path('module', 'r2ep_stats');
	// drupal_add_css($path .'/css/r2ep_stats.css');
	$block = array();

	switch ($delta) {
		case R2EP_BLOCK_USER_THERMOMETER:
			$block['subject'] = t('Help Reach My Goal');
			$block['content'] = _r2ep_stats_user_thermometer();
			break;
		case R2EP_BLOCK_GROUP_THERMOMETER:
			$block['subject'] = t('Help Reach Our Goal');
			$block['content'] = _r2ep_stats_group_thermometer();
			break;
		case R2EP_STATS_BLOCK:
			$block['subject'] = t('R2EP Stats');

			$node = menu_get_object();
			$uid = arg(1);
			$user = @user_load($uid);
			$event_id = (int)$_GET['field_event_target_id'];

			if ($node && $node->type == 'team') {
				$block['content'] = _r2ep_stats_team_stats();
			} else if ($node && $node->type == 'campaign') {
				$block['content'] = _r2ep_stats_campaign_stats();
			} else if (($node && $node->type == 'event') || is_numeric($event_id)) {
				$block['content'] = _r2ep_stats_event_stats();
			} else if (arg(0) == 'user' && $uid && $user && $user->uid != 0) {
				$block['content'] = _r2ep_stats_runner_stats();
			} else {
				$block['content'] = _r2ep_stats_national_stats();
			}

			break;
	}

	return $block;
}

function _r2ep_stats_national_stats() {
	$block = array();

	$runner_count = _r2ep_stats_get_all_runners_count();
	$runner_count = isset($runner_count)? $runner_count : 0;
	$runners_label = $runner_count == 1 ? t('runner') : t('runners');

	$money = _r2ep_stats_get_all_donations_total();
	$money = isset($money)? $money : 0;

	$teams_count = _r2ep_stats_get_all_teams_count();
	$teams_count = isset($teams_count)? $teams_count : 0;
	$teams_label = $teams_count == 1 ? t('team') : t('teams');

	$block = array(
		'#theme' => 'item_list',
		'#items' => array(),
		'#attributes' => array(
			'class' => 'stats-list'
		),
	);

	$path = drupal_get_path('module', 'r2ep_stats');
	$block['#items'][] = array(
		'data'	=> t('<a href="@url"><div><img src="/@path/images/@img" />@text</div></a>', array(
			'@url'	=> '/runners',
			'@path'	=> $path,
			'@img'	=> 'runners.png',
			'@text'	=> $runner_count .' '. $runners_label
		)),
		'class' => array('runners'),
	);
	$block['#items'][] = array(
		'data'	=> t('<img src="/@path/images/@img" />@text', array(
			'@path'	=> $path,
			'@img'	=> 'coin.png',
			'@text'	=> $money .' '. t('raised'),
		)),
		'class' => array('coin'),
	);
	$block['#items'][] = array(
		'data'	=> t('<a href="@url"><div><img src="/@path/images/@img" />@text</div></a>', array(
			'@url'	=> '/teams',
			'@path'	=> $path,
			'@img'	=> 'teams.png',
			'@text'	=> $teams_count .' '. t($teams_label)
		)),
		'class' => array('teams'),
	);

	return $block;
}

// updated
function _r2ep_stats_event_stats() {
	$block = array();
	$node = menu_get_object();
	$event_id = (int)$_GET['field_event_target_id'];

	if (!$node && is_numeric($event_id)) {
		$node = node_load($event_id);
	}

	if (!$node || $node->type != 'event') {
		return '';
	}

	$runners = @$node->field_runners_count['und'][0]['value'];
	$donations = @$node->field_total_donations['und'][0]['value'];
	$teams = @$node->field_teams_count['und'][0]['value'];

	$runners = isset($runners)? $runners : 0;
	$donations = isset($donations)? $donations : 0;
	$teams = isset($teams)? $teams : 0;

	$runners_label = $runners == 1 ? t('runner') : t('runners');
	setlocale(LC_MONETARY, 'en_US');
	$money = money_format('%.0n', $donations);
	$teams_label = $teams == 1 ? t('team') : t('teams');

	$block = array(
		'#theme' => 'item_list',
		'#items' => array(),
		'#attributes' => array(
			'class' => 'stats-list'
		),
	);

	$path = drupal_get_path('module', 'r2ep_stats');
	$block['#items'][] = array(
		'data'	=> t('<a href="@url"><div><img src="/@path/images/@img" />@text</div></a>', array(
			'@url'	=> '/runners?field_event_target_id='. $node->nid,
			'@path'	=> $path,
			'@img'	=> 'runners.png',
			'@text'	=> $runners .' '. $runners_label
		)),
		'class' => array('runners'),
	);
	$block['#items'][] = array(
		'data'	=> t('<img src="/@path/images/@img" />@text', array(
			'@path'	=> $path,
			'@img'	=> 'coin.png',
			'@text'	=> $money .' '. t('raised'),
		)),
		'class' => array('coin'),
	);
	$block['#items'][] = array(
		'data'	=> t('<a href="@url"><div><img src="/@path/images/@img" />@text</div></a>', array(
			'@url'	=> '/teams?field_event_target_id='. $node->nid,
			'@path'	=> $path,
			'@img'	=> 'teams.png',
			'@text'	=> $teams .' '. t($teams_label)
		)),
		'class' => array('teams'),
	);

	return $block;
}

// updated
function _r2ep_stats_team_stats() {
	$block = array();
	$node = menu_get_object();

	if (!$node || $node->type != 'team') {
	 	return '';
	}

	$runners = @count($node->field_runners['und']);
	$donations_total = @$node->field_total_donations['und'][0]['value'];
	$donations_count = @$node->field_donation_count['und'][0]['value'];

	$runners = isset($runners)? $runners : 0;
	$donations_total = isset($donations_total)? $donations_total : 0;
	$donations_count = isset($donations_count)? $donations_count : 0;

	$runners_label = $runners == 1 ? t('runner') : t('runners');
	setlocale(LC_MONETARY, 'en_US');
	$money = money_format('%.0n', $donations_total);
	$donations_label = $donations_count == 1? t('donation') : ('donations');

	$block = array(
		'#theme' => 'item_list',
		'#items' => array(),
		'#attributes' => array(
			'class' => 'stats-list'
		),
	);

	// FIXME change to goal
	$teams = array(); //_r2ep_stats_get_teams('TEAM');
	$teams_count = count($teams);
	$teams_label = $teams_count == 1 ? 'CHANGE' : 'CHANGE';

	$path = drupal_get_path('module', 'r2ep_stats');
	$block['#items'][] = array(
		'data'	=> t('<a href="@url"><div><img src="/@path/images/@img" />@text</div></a>', array(
			'@url'	=> '/runners?team_id='. $node->nid,
			'@path'	=> $path,
			'@img'	=> 'runners.png',
			'@text'	=> $runners .' '. $runners_label
		)),
		'class' => array('runners'),
	);
	$block['#items'][] = array(
		'data'	=> t('<img src="/@path/images/@img" />@text', array(
			'@path'	=> $path,
			'@img'	=> 'coin.png',
			'@text'	=> $money .' '. t('raised'),
		)),
		'class' => array('coin'),
	);
	$block['#items'][] = array(
		'data'	=> t('<img src="/@path/images/@img" />@text', array(
			'@path'	=> $path,
			'@img'	=> 'donations.png',
			'@text'	=> $donations_count .' '. t($donations_label)
		)),
		'class' => array('coin'),
	);

	return $block;
}

function _r2ep_stats_runner_stats() {
	$block = array();
	$uid = arg(1);
	if (!$uid) {
		return;
	}

	$user = user_load($uid);
	$campaigns = @$user->field_campaign_count['und'][0]['value'];
	$donations_count = @$user->field_donation_count['und'][0]['value'];
	$donations_total = @$user->field_total_donations['und'][0]['value'];

	$campaigns = isset($campaigns)? $campaigns : 0;
	$donations_count = isset($donations_count)? $donations_count : 0;
	$donations_total = isset($donations_total)? $donations_total : 0;

	$campaigns_label = $campaigns == 1 ? ' campaign' : ' campaigns';
	setlocale(LC_MONETARY, 'en_US');
	$money = money_format('%.0n', $donations_total);
	$donations_label = $donations_count == 1? ' donation' : 'donations';

	$block = array(
		'#theme' => 'item_list',
		'#items' => array(),
		'#attributes' => array(
			'class' => 'stats-list'
		),
	);

	$path = drupal_get_path('module', 'r2ep_stats');
	$block['#items'][] = array(
		'data'	=> t('<img src="/@path/images/@img" />@text', array(
			'@path'	=> $path,
			'@img'	=> 'campaigns.png',
			'@text'	=> $campaigns .' '. $campaigns_label
		)),
		'class' => array('campaigns'),
	);
	$block['#items'][] = array(
		'data'	=> t('<img src="/@path/images/@img" />@text', array(
			'@path'	=> $path,
			'@img'	=> 'coin.png',
			'@text'	=> $money .' '. t('raised'),
		)),
		'class' => array('coin'),
	);
	$block['#items'][] = array(
		'data'	=> t('<img src="/@path/images/@img" />@text', array(
			'@path'	=> $path,
			'@img'	=> 'donations.png',
			'@text'	=> $donations_count .' '. t($donations_label)
		)),
		'class' => array('coin'),
	);

	return $block;
}

function _r2ep_stats_campaign_stats() {
	$block = array();
	$node = menu_get_object();

	if (!$node || $node->type != 'campaign') {
	 	return '';
	}

	$donations_total = @$node->field_total_donations['und'][0]['value'];
	$donations_count = @$node->field_donation_count['und'][0]['value'];
	$goal = @$node->field_goal['und'][0]['value'];

	$donations_total = isset($donations_total)? $donations_total : 0;
	$donations_count = isset($donations_count)? $donations_count : 0;
	$goal = isset($goal)? $goal : 0;

	$runners_label = $runners == 1 ? t('runner') : t('runners');
	setlocale(LC_MONETARY, 'en_US');
	$money = money_format('%.0n', $donations_total);
	$goal = money_format('%.0n', $goal);
	$donations_label = $donations_count == 1? t('donation') : ('donations');

	$block = array(
		'#theme' => 'item_list',
		'#items' => array(),
		'#attributes' => array(
			'class' => 'stats-list'
		),
	);

	// FIXME change to goal
	$path = drupal_get_path('module', 'r2ep_stats');
	$block['#items'][] = array(
		'data'	=> t('<img src="/@path/images/@img" />@text', array(
			'@path'	=> $path,
			'@img'	=> 'coin.png',
			'@text'	=> $money .' '. t('raised'),
		)),
		'class' => array('coin'),
	);
	$block['#items'][] = array(
		'data'	=> t('<div><img src="/@path/images/@img" />@text</div>', array(
			'@path'	=> $path,
			'@img'	=> 'donations.png',
			'@text'	=> $donations_count .' '. $donations_label
		)),
		'class' => array('runners'),
	);
	$block['#items'][] = array(
		'data'	=> t('<img src="/@path/images/@img" />@text', array(
			'@path'	=> $path,
			'@img'	=> 'coin.png',
			'@text'	=> $goal .' goal'
		)),
		'class' => array('coin'),
	);

	return $block;
}

// computed fields
function computed_field_field_total_donations_compute(&$entity_field, $entity_type, $entity, $field, $instance, $langcode, $items) {

	if ($entity_type == 'user') {
		_r2ep_stats_total_donations_user($entity_field, $entity_type, $entity, $field, $instance, $langcode, $items);
	} else if ($entity_type == 'node') {
		switch ($entity->type) {
			case 'campaign':
				_r2ep_stats_total_donations_campaign($entity_field, $entity_type, $entity, $field, $instance, $langcode, $items);
				break;
			case 'event':
				_r2ep_stats_total_donations_event($entity_field, $entity_type, $entity, $field, $instance, $langcode, $items);
				break;
			case 'team':
				_r2ep_stats_total_donations_team($entity_field, $entity_type, $entity, $field, $instance, $langcode, $items);
				break;
		}
	}

}

function computed_field_field_donation_count_compute(&$entity_field, $entity_type, $entity, $field, $instance, $langcode, $items) {

	if ($entity_type == 'user') {
		_r2ep_stats_donation_count_user($entity_field, $entity_type, $entity, $field, $instance, $langcode, $items);
	} else if ($entity_type == 'node') {
		switch ($entity->type) {
			case 'campaign':
				_r2ep_stats_donation_count_campaign($entity_field, $entity_type, $entity, $field, $instance, $langcode, $items);
				break;
			case 'event':
				_r2ep_stats_donation_count_event($entity_field, $entity_type, $entity, $field, $instance, $langcode, $items);
				break;
			case 'team':
				_r2ep_stats_donation_count_team($entity_field, $entity_type, $entity, $field, $instance, $langcode, $items);
				break;
		}
	}
}

function computed_field_field_runners_count_compute(&$entity_field, $entity_type, $entity, $field, $instance, $langcode, $items) {

	if ($entity_type == 'node') {
		switch($entity->type) {
			case 'event':
				$entity_field[0]['value'] = _r2ep_stats_number_of_runners_for_event($entity->nid);
				break;
		}
	}
}

function computed_field_field_teams_count_compute(&$entity_field, $entity_type, $entity, $field, $instance, $langcode, $items) {
	if ($entity_type == 'node') {
		switch($entity->type) {
			case 'event':
				$entity_field[0]['value'] = _r2ep_stats_number_of_teams_for_event($entity->nid);
				break;
		}
	}
}

function computed_field_field_campaign_count_compute(&$entity_field, $entity_type, $entity, $field, $instance, $langcode, $items) {
	if ($entity_type == 'user') {
		$entity_field[0]['value'] = _r2ep_stats_number_of_campaigns_for_user($entity->uid);
	}
}

function computed_field_field_total_goal_compute(&$entity_field, $entity_type, $entity, $field, $instance, $langcode, $items) {
	if ($entity_type == 'user') {
		_r2ep_stats_donation_total_user($entity_field, $entity_type, $entity, $field, $instance, $langcode, $items);
	} else if ($entity_type == 'node') {
		switch ($entity->type) {
			case 'campaign':
				_r2ep_stats_donation_total_campaign($entity_field, $entity_type, $entity, $field, $instance, $langcode, $items);
				break;
			case 'event':
				_r2ep_stats_donation_total_event($entity_field, $entity_type, $entity, $field, $instance, $langcode, $items);
				break;
			case 'team':
				_r2ep_stats_donation_total_team($entity_field, $entity_type, $entity, $field, $instance, $langcode, $items);
				break;
		}
	}
}

function _r2ep_stats_user_thermometer() {
	if (arg(0) != 'user') {
		return '';
	}

	$uid = arg(1);
	$user = user_load($uid);

	$goal = @$user->field_total_goal['und'][0]['value'];
	$current = @$user->field_total_donations['und'][0]['value'];

	return _r2ep_stats_thermometer($goal, $current, 'my goal');
}

function _r2ep_stats_group_thermometer() {
	$node = menu_get_object();
	$goal = 0;
	$current = 0;

	if (!$node) return '';

	switch ($node->type) {
		case 'campaign':
			$goal = @$node->field_goal['und'][0]['value'];
			$current = @$node->field_total_donations['und'][0]['value'];
			return _r2ep_stats_thermometer($goal, $current, 'my goal');
			break;
		case 'event':
			$goal = @$node->field_total_goal['und'][0]['value'];
			$current = @$node->field_total_donations['und'][0]['value'];
			return _r2ep_stats_thermometer($goal, $current, 'our goal');
			break;
		case 'team':
			$goal = @$node->field_total_goal['und'][0]['value'];
			$current = @$node->field_total_donations['und'][0]['value'];
			return _r2ep_stats_thermometer($goal, $current, 'our goal');
			break;
		default:
			return '';
	}
}


function _r2ep_stats_thermometer($goal, $current, $tense = 'goal') {
	$content = array();
	$path = drupal_get_path('module', 'r2ep_stats');

	if (!$goal) return;
	drupal_add_css(drupal_get_path('module', 'r2ep_stats') . '/r2ep_stats.css');

	$percent = $current/$goal * 100;
	setlocale(LC_MONETARY, 'en_US');
	$goal_money = money_format('%.0n', $goal);
	$current_money = money_format('%.0n', $current);

	$content['#attached']['js'] = array(
		array(
			'data' => $path .'/js/runner.js',
		),
		array(
			'data' => $path .'/js/counter.js'
		),
	);

	$content['content'] = array(
		'#prefix' => '<div class="thermometer">',
		'#suffix' => '</div>',
	);
	$content['content']['details'] = array(
		'#prefix'	=> '<div class="gridContainer">',
		'#suffix'	=> '</div>',
		array(
			'#type'		=> 'markup',
			'#markup'	=> "<span><span data-object=\"counter\" data-start=\"0\" data-end=\"$current\">$current_money</span></span><br/>raised so far",
			'#prefix'	=> '<div class="col-1-2">',
			'#suffix'	=> '</div>',
		),
		array(
			'#type'		=> 'markup',
			'#markup'	=> "<span>$goal_money</span><br/>". $tense,
			'#prefix'	=> '<div class="col-1-2">',
			'#suffix'	=> '</div>',
		)
	);
	$content['content']['track'] = array(
		'#prefix' => '<div class="track">',
		'#suffix' => '</div>',
		'#type'	=> 'markup',
		'#markup' => '<div class="guy" data-object="runner" data-percent="'.$percent.'"><img src="/sites/all/modules/custom/r2ep_stats/images/runner.gif" /></div>',
	);
	$content['content']['clear'] = array(
		'#type'		=> 'markup',
		'#markup'	=> '<div class="clear"></div>',
	);


	return $content;
}

